<html>
  <%- include("partials/head", {
    description: "Are you spending money on hosting? No more! You can use Github to host your startup website for free right now. Read this article to learn how." , 
    title: "Free Hosting! Find out how", 
    image: "images/articles/free-hosting/free_hosting.jpg", 
    href: "free-hosting-find-out-how.html", 
    type: "article"
}) %>
  <%- include("partials/head_art", {
    published: "2016-03-18", 
    modified_time: "2017-12-11", 
    author: "Miguel Teixeira "
}) %>
  <%- include("partials/head_analytics") %>
  
  <body class="mdc-typography">
    
    <%- include partials/nav.ejs %>


    <div class="container background">
      <div class="row">

        <%- include("partials/FAB_share", {
        href : "free-hosting-find-out-how.html"
        }) %>
        
      
      <div class=card-panel>


        
          <%- include("partials/article_title", {
            title: "Free Hosting! Find out how", 
            author: "Miguel Teixeira", 
            modified_time:"2017-12-11", 
            tags: "Resources, Hosting" 
            }) %>

          <div class="article">


 <p>Are you spending money on hosting? No more! You can use <a href="https://github.com/" rel="nofollow" target="blank">Github</a> to host your startup website for free right now. Read this article to learn how.</p>
      <p>So you created a website. Now it's time to roll it out. This is what you need to do before following these instructions:</p>
      <blockquote> <ul>
        <li>Have a domain,</li>
        <li>Have a website built,</li>
        <li>Register on Github.com,</li>
        <li>Install Git.</li>
      </ul></blockquote>
      <h2>What is Github</h2>
      <p>Github is an online service that enables developers to share and develop software. Github is based on Git, a widely used source code management system for software development. So it is critical that you understand some very basic Git scripts. In the course of this article we will teach you how to use Git and Github to get your website published and updated.</p>
      <h2>Git and Github</h2>
      <p>In Git and on Github there are a few concepts you need to understand to get your free hosting. First and most importantly, there are repositories which are pretty much projects. Then there are branches. Branches are like different versions or tastes of that project. So your project can branch off into different branches.</p>
      <h2>DOM files</h2>
      <p>The DOM files are the files that the browser retrieves from the server where your site is hosted, in order to present a website. They are:</p>
      <blockquote><ul>
        <li>html pages,</li>
        <li>CSS files,</li>
        <li>JS Files,</li>
        <li>images,</li>
        <li>icons,</li>
        <li>videos,</li>
        <li>all other elements present in your website.</li>
      </ul></blockquote>
      <h2>What is a Domain</h2>
      <p>A domain is basically the name of your website, like ideaninja.io or google.com. This name needs to be purchased and you need to hold the credentials to manage this domain, if you want to have a custom domain, instead of using the one that github will give you.</p>
      <h2>Step 1 – Create Github repository</h2>
      <p>Go to Github and create a repository on Github for your website. Note that your branch now is called Master.</p>
      <img src="images/articles/free-hosting/newrepo.jpg" id="articleimg" alt="New repository on Github">
      <h2>Step 2 – Create gh-pages branch</h2>
      <p>Create a new branched named gh-pages.</p>
        <img src="images/articles/free-hosting/newbranch.jpg" id="articleimg" alt="New branch on Github">
      <h2>Step 3 – Clone the repository</h2>
      <p>To clone the Github repository you have just created to your PC, create a new folder named Github and from there open a console by typing cmd, on windows, or terminal, if you are on mac. Then go to the folder you have just created and write the following command:</p>
      <p style="margins: 20px">Git clone  [repo url] --branch gh.pages .</p>
      <p>Note: The repo url you can find on your repository page on Github where it says https. Copy it to the command and run it.</p>
      <p>You will notice that some files have been downloaded.</p>
      <h2>Step 4 – Adding the DOM files to your repository</h2>
      <p>Now copy the DOM files to the local repository you have just created. And in the command line write:</p>
      <ul>
        <li>git add .  - please notice the dot</li>
        <li>git commit -m “[write the description of this first submission]”</li>
        <li>Git push</li>
      </ul>
      <p>The terminal should ask you for your username and password from Github.<p>
      <p>After that,  if you go to your gh-pages branch in your Github repository you should see the files you have just pushed.</p>
      <h2>Step 5 – Test your new free hosting</h2>
      <p>Test your website, through the following URL [username].github.io/[repository name]</p>
      <h2>Step 6 – Customizing the domain</h2>
      <p>Now, to get your site to respond in your custom domain, that you have purchased, add a File named CNAME (all Caps and no extension) and in that file write down your domain to your local repository. Repeat the same steps you did in step 4 (add, commit, push).</p>
      <div>
      <p>Now, go to your domain manager (website where you purchased the domain) and edit the Zone file or change it to this:</p>
      <img src="images/articles/free-hosting/zonefile.jpg" id="articleimg" alt="Domain zonefile website">
      <p>or this: <br>
      @ 10800 IN A 192.30.252.153<br>
      @ 10800 IN A 192.30.252.154<br>
      www 10800 IN CNAME @<br></p>
      </div><!--step5-->
      <p>Usually you can do this in DNS management, but it might be located in a different place, depending on the provider you have used.</p>
      <p>Make sure that your domain is using the zone file you edited/created.</p>
      <p>Note: it may take a few hours before the website is available. These new settings need to be propagated through the ISP, so don't worry if you cannot see your site right after you completed these 6 steps.</p>



          </div> <!--article-->
        
        </div><!--cardpanel-->
      <div id="searchheader"></div>
      <div id="cardsrow">
        <div id="endofcards"></div>
        </div> <!-- cardsrow-->

      </div><!-- Row -->
      </div><!--container --> 
 

    <%- include partials/footer.ejs %>
    <script src="/js/cardDisplay.js"></script>
    
        
  </body>
</html>