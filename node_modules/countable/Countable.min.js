/**
 * Countable is a script to allow for live paragraph-, word- and character-
 * counting on an HTML element.
 *
 * @author   Sacha Schmid (<https://github.com/RadLikeWhoa>)
 * @version  3.0.0
 * @license  MIT
 * @see      <http://radlikewhoa.github.io/Countable/>
 */

(function(n){function l(a){for(var b=[],c=0,d=a.length;c<d;){var f=a.charCodeAt(c++);if(55296<=f&&56319>=f&&c<d){var e=a.charCodeAt(c++);56320==(e&64512)?b.push(((f&1023)<<10)+(e&1023)+65536):(b.push(f),c--)}else b.push(f)}return b}function g(a,b){var c=Object.prototype.toString.call(a);c="[object NodeList]"===c||"[object HTMLCollection]"===c||1===a.nodeType;var d="function"===typeof b;c||console.error("Countable: Not a valid target");d||console.error("Countable: Not a valid callback function");return c&&d}function m(a,b){var c=""+("value"in a?a.value:a.textContent);b=b||{};b.stripTags&&(c=c.replace(/<\/?[a-z][^>]*>/gi,""));b.ignore&&h.call(b.ignore,function(a){c=c.replace(a,"")});var d=c.trim();return{paragraphs:d?(d.match(b.hardReturns?/\n{2,}/g:/\n+/g)||[]).length+1:0,sentences:d?(d.match(/[.?!\u2026]+./g)||[]).length+1:0,words:d?(d.replace(/['";:,.?\u00bf\-!\u00a1]+/g,"").match(/\S+/g)||[]).length:0,characters:d?l(d.replace(/\s/g,"")).length:0,all:l(c).length}}var e=[],h=Array.prototype.forEach,k={on:function(a,b,c){if(g(a,b))return void 0===a.length&&(a=[a]),h.call(a,function(a){var d=function(){b.call(a,m(a,c))};e.push({element:a,handler:d});d();a.addEventListener("input",d)}),this},off:function(a){if(g(a,function(){}))return void 0===a.length&&(a=[a]),e.filter(function(b){return-1!==a.indexOf(b.element)}).forEach(function(a){a.element.removeEventListener("input",a.handler)}),e=e.filter(function(b){return-1===a.indexOf(b.element)}),this},count:function(a,b,c){if(g(a,b))return void 0===a.length&&(a=[a]),h.call(a,function(a){b.call(a,m(a,c))}),this},enabled:function(a){void 0===a.length&&(a=[a]);return e.filter(function(b){return-1!==a.indexOf(b.element)}).length===a.length}};"object"===typeof exports?module.exports=k:"function"===typeof define&&define.amd?define(function(){return k}):n.Countable=k})(this);
